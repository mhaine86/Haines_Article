\documentclass{article}

\begin{document}
\SweaveOpts{concordance=TRUE}

\title{Treasure Island Wordcloud}
\author{Matthew Haines}
\maketitle

\begin{abstract}
This PDF will contain a wordcloud and title of the book 'Treasure Island' by Robert Louis Stevenson.

\end{abstract}

\textit{Treasure Island}

\section{packages}
This section will contain the packages which will then be used to load 'Treasure Island', manipulate string and form wordclouds.

<<>>=
package<-c('dplyr')
library(tidytext)
library(tm)
library(wordcloud)
library(stringr)
library(dplyr)
library(knitr)
library(gutenbergr)
@

The first step is to determine the id of Treasure Island:

<<warning=FALSE,message=FALSE>>=

gutenberg_works()%>%
  select(gutenberg_id,title,author)%>%
  filter(title=='Treasure Island')
@

\noindent In the resulting tibble from the code above, one can pick out the id of the book; 120.

\section{Chapter 1}

Here I want to isolate the 'chapter 1' block of text
<<>>=
library(stringr)
df <- gutenberg_download(120)
head(df[str_detect(df$text, '^CHAPTER'),],n=1)$text
@


\section{The Wordcloud}
Next we will create a database of all the words in Treasure Island.
<<>>=
words_df<-df%>%
  unnest_tokens(word,text)

words_df
@

Using dplyr, we can remove stop and insigificant words. Then using the word cloud package we can compile the words into a wordcloud. 
<<>>=
words_df<-words_df%>%
  filter(!(word %in% stop_words$word))
words_free <- words_df%>%
  group_by(word)%>%
  summarise(count = n())%>%
  arrange(-count)

wordcloud(words_free$word, words_free$count, min.freq = 25)
@


\end{document}